(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["experiment-02"],{3360:function(e,n,i){"use strict";var t=i("a002"),s=i.n(t);s.a},"71c2":function(e,n,i){"use strict";i.r(n);var t=function(){var e=this,n=e.$createElement,i=e._self._c||n;return i("div",{staticClass:"default"},[i("PageHeader",{attrs:{route:this.$route}}),i("canvas",{ref:"canvas",staticClass:"canvas"})],1)},s=[],o=i("36ad"),r="#define GLSLIFY 1\nvarying vec2 v_uv;\n\nvoid main(){\n  v_uv = uv;\n\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n}\n",a="#define GLSLIFY 1\nuniform float u_time;\nuniform vec2 u_mouse;\nuniform vec2 u_resolution;\n\n// Varying the vertex uv from the vertex shader\nvarying vec2 v_uv;\n\nvoid main(){\n  vec2 uv = gl_FragCoord.xy / u_resolution;\n  vec2 color = u_mouse / u_resolution;\n\n  // Create vec3 of mouse cordinate and the time\n  // A big combination of stuff to create some graphics :)\n  vec3 first = vec3(color.x, v_uv.y, (sin(u_time) + 1.0)/ 2.0);\n  vec3 second = vec3(color.y, v_uv.x, (sin(u_time) + 1.0)/ 2.0);\n\n  // Mix the vec3 bases of the y position of the screen\n  vec3 mixed = mix(first, second, uv.y);\n  gl_FragColor = vec4(mixed, 1.0);\n}",u=i("5a89"),c=i("cffa"),v=c.gsap,d={name:"experiment-02",components:{PageHeader:o["a"]},data:function(){return{scene:new u.Scene,camera:new u.OrthographicCamera(1,-1,1,-1,.1,10),renderer:null,clock:new u.Clock,uniforms:{u_color:{value:new u.Color(65280)},u_time:{value:0},u_mouse:{value:{x:0,y:0}},u_resolution:{value:{x:0,y:0}}}}},computed:{dimensions:function(){return{innerWidth:this.$store.getters.dimensions.innerWidth,innerHeight:this.$store.getters.dimensions.innerHeight}}},watch:{dimensions:function(){this.setSizes()}},mounted:function(){this.renderer=new u.WebGLRenderer({canvas:this.$refs.canvas}),this.camera.position.z=1,this.renderer.setClearColor(11393254,1),this.setSizes(),this.createPlane(),this.setUpEventListeners()},methods:{setUpEventListeners:function(){this.tickHandler(),this.mousemoveHandler()},setSizes:function(){var e=this.$store.getters.dimensions,n=e.innerWidth,i=e.innerHeight;this.renderer.setSize(n,i),this.$refs.canvas.width=n,this.$refs.canvas.height=i,this.uniforms.u_resolution.value.x=n,this.uniforms.u_resolution.value.y=i},changeMousePosition:function(e){this.uniforms.u_mouse.value.x=e.clientX,this.uniforms.u_mouse.value.y=e.clientY},createPlane:function(){var e=new u.PlaneGeometry(2,2),n=new u.ShaderMaterial({uniforms:this.uniforms,vertexShader:r,fragmentShader:a,side:u.DoubleSide}),i=new u.Mesh(e,n);this.scene.add(i)},render:function(){this.renderer.render(this.scene,this.camera),this.uniforms.u_time.value=this.clock.getElapsedTime()},tickHandler:function(){v.ticker.add(this.render)},mousemoveHandler:function(){window.addEventListener("mousemove",this.changeMousePosition)}},beforeDestroy:function(){window.removeEventListener("mousemove",this.changeMousePosition)}},h=d,m=(i("3360"),i("0c7c")),l=Object(m["a"])(h,t,s,!1,null,"291e3656",null);n["default"]=l.exports},a002:function(e,n,i){}}]);
//# sourceMappingURL=experiment-02.9452beee.js.map